language: cpp

# Use linux unless specified otherwise
os: linux
dist: trusty

matrix:
  include:

    # macOS clang
    - os: osx
      env:
        - CORES=2
        - CXX_OVERRIDE=clang++
        - CC_OVERRIDE=clang
        - CHECK=check
        - BUILD=release
      compiler: clang

    - os: osx
      env:
        - CORES=2
        - CXX_OVERRIDE=clang++
        - CC_OVERRIDE=clang
        - CHECK=check
        - BUILD=debug
        - PIR_ENABLE=force
      compiler: clang

    # linux gcc
    - env:
        - CXX_OVERRIDE=g++-7
        - CC_OVERRIDE=gcc-7
        - CHECK=check
        - BUILD=release

    - env:
        - CORES=2
        - CXX_OVERRIDE=g++-7
        - CC_OVERRIDE=gcc-7
        - CHECK=check
        - BUILD=debug
        - PIR_ENABLE=force

    - env:
        - CXX_OVERRIDE=g++-7
        - CC_OVERRIDE=gcc-7
        - CHECK=test-all-devel
        - BUILD=release
        - PIR_ENABLE=force
        - ENABLE_VALGRIND=1

    - env:
        - CXX_OVERRIDE=g++-7
        - CC_OVERRIDE=gcc-7
        - CHECK=check-recommended
        - BUILD=release

addons:
  apt:
    packages:
      - g++-7
      - xdg-utils
      - gfortran
      - subversion
      - make
      - r-base-dev
      - liblzma-dev
      - sed
      - binutils
      - curl
      - cmake
      - rsync
      - xorg-dev
      - valgrind
    sources:
      - ubuntu-toolchain-r-test

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then . ./tools/ci/before_install-osx.sh; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then . ./tools/ci/before_install-linux.sh; fi

before_script:
  - export TZ=""
  - export CXX=$CXX_OVERRIDE
  - export CC=$CC_OVERRIDE
  - ${CXX} --version
  - ${CC} --version
  - cd "${TRAVIS_BUILD_DIR}"
  - mkdir build && cd build
  - cmake -DCMAKE_BUILD_TYPE=$BUILD ..
  - make setup
  - make -j2

script:
  - export R_GCTORTURE=1000
  - ./bin/tests
  - echo "JIT enabled"
  - R_ENABLE_JIT=2 ./bin/tests
  - R_ENABLE_JIT=2 PIR_ENABLE=force ./bin/tests
  - R_ENABLE_JIT=3 ./bin/tests
  - echo "running make $CHECK on a $BUILD build with CORES=$CORES and PIR_ENABLE=$PIR_ENABLE"
  - TEST_MC_CORES=$CORES ./bin/gnur-make-tests $CHECK


cache:
  ccache: true
  directories:
    - external
