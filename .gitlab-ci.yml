stages:
  - Build container
  - Sanity Checks
  - Build benchmark container
  - Run tests
  - Deploy
  - Cleanup

before_script:
  - export PIR_MAX_INPUT_SIZE=99999
  - export PIR_INLINER_MAX_SIZE=99999
  - export PIR_DEOPT_CHAOS_SEED=$RANDOM
  - export PIR_SERIALIZE_CHAOS_SEED=$(shuf -i 55-75 -n 1)
  - echo "PIR_MAX_INPUT_SIZE=$PIR_MAX_INPUT_SIZE PIR_INLINER_MAX_SIZE=$PIR_INLINER_MAX_SIZE PIR_DEOPT_CHAOS_SEED=$PIR_DEOPT_CHAOS_SEED PIR_SERIALIZE_CHAOS_SEED=$PIR_SERIALIZE_CHAOS_SEED"

sanity:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
      GIT_STRATEGY: none
  stage: Sanity Checks
  script:
    - /opt/rir/tools/cppcheck --xml
    - /opt/rir/build/release/bin/tests

rir container:
  stage: Build container
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  before_script:
    - docker info
  script:
    - echo "$CI_BUILD_TOKEN" | docker login -u "$CI_BUILD_USER" --password-stdin registry.gitlab.com
    - docker build --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA -t registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA .
    - docker push registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA

benchmark container:
  stage: Build benchmark container
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  before_script:
    - docker info
  script:
    - echo "$CI_BUILD_TOKEN" | docker login -u "$CI_BUILD_USER" --password-stdin registry.gitlab.com
    - cd container/benchmark
    - docker build --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA -t registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA .
    - docker push registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA

tests_release:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
      GIT_STRATEGY: none
  stage: Run tests
  script:
    - cd /opt/rir/build/release
    - bin/gnur-make-tests test-all-devel
    - ../../tools/check-gnur-make-tests-error
    - bin/gnur-make-tests check-recommended
    - ../../tools/check-gnur-make-tests-error

test_types_and_serialize:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
      GIT_STRATEGY: none
  stage: Run tests
  script:
    - cd /opt/rir/build/release
    - RIR_CHECK_PIR_TYPES=1 bin/tests
    - RIR_CHECK_PIR_TYPES=1 bin/gnur-make-tests check-all
    - ../../tools/check-gnur-make-tests-error
    - RIR_SERIALIZE_CHAOS=1 bin/tests
    - RIR_SERIALIZE_CHAOS=3 bin/tests
    - RIR_SERIALIZE_CHAOS=$PIR_SERIALIZE_CHAOS_SEED bin/gnur-make-tests check-all

tests_fullverifier:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
      GIT_STRATEGY: none
  stage: Run tests
  script:
    - cd /opt/rir/build/fullverifier
    - bin/tests
    - bin/gnur-make-tests check
    - PIR_WARMUP=4 ./bin/gnur-make-tests check
    - PIR_ENABLE=force ./bin/gnur-make-tests check

tests_debug:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
      GIT_STRATEGY: none
  stage: Run tests
  script:
    - cd /opt/rir/build/debugopt
    - export UNSOUND_OPTS=off
    - bin/tests
    - R_ENABLE_JIT=0 ./bin/tests
    - R_ENABLE_JIT=1 ./bin/tests
    - R_ENABLE_JIT=2 ./bin/tests
    - R_ENABLE_JIT=3 ./bin/tests
    - PIR_ENABLE=off ./bin/tests
    - PIR_ENABLE=force ./bin/tests
    - for i in `seq 1 5`; do PIR_DEOPT_CHAOS_SEED=$i PIR_DEOPT_CHAOS=1 ./bin/tests ; done
    - ./bin/gnur-make-tests check-devel
    - ../../tools/check-gnur-make-tests-error

test_sanitize:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
      GIT_STRATEGY: none
  stage: Run tests
  script:
    - cd /opt/rir/build/sanitize
    - ENABLE_VALGRIND=1 ./bin/tests
    - R_GCTORTURE=200 bin/tests
    - R_GCTORTURE=1000 ./bin/gnur-make-tests check

test_big_inline:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
      GIT_STRATEGY: none
  stage: Run tests
  script:
    - cd /opt/rir/build/release
    - PIR_INLINER_MAX_INLINEE_SIZE=2000 ./bin/tests
    - PIR_INLINER_MAX_INLINEE_SIZE=1000 ./bin/gnur-make-tests check
    - for i in `seq 1 3`; do PIR_INLINER_MAX_INLINEE_SIZE=2000 PIR_DEOPT_CHAOS_SEED=$i PIR_DEOPT_CHAOS=1 ./bin/tests ; done

test_flaky:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
      GIT_STRATEGY: none
  stage: Run tests
  retry: 2
  script:
    - cd /opt/rir/build/release
    - PIR_DEOPT_CHAOS=1 PIR_INLINER_MAX_INLINEE_SIZE=800 bin/gnur-make-tests check
    - PIR_WARMUP=2 PIR_DEOPT_CHAOS=1 ./bin/gnur-make-tests check

test_benchmarks:
  image: registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
  variables:
      GIT_STRATEGY: none
  stage: Run tests
  script:
    - PATH=~/.local/bin:$PATH /opt/rbenchmarking/Setup/run.sh /opt/rbenchmarking/rebench.conf /opt/rbenchmarking/Benchmarks /opt/rir/build/release/ /opt/rir/external/custom-r e:RIR e:PIR -r -SN -wu 0 --iterations 2
    - PIR_DEOPT_CHAOS=1 PATH=~/.local/bin:$PATH /opt/rbenchmarking/Setup/run.sh /opt/rbenchmarking/rebench.conf /opt/rbenchmarking/Benchmarks /opt/rir/build/release/ /opt/rir/external/custom-r e:RIR e:PIR -r -SN -wu 0 --iterations 2

deploy:
  stage: Deploy
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  before_script:
    - docker info
  variables:
      GIT_STRATEGY: none
  script:
    - echo "$CI_BUILD_TOKEN" | docker login -u "$CI_BUILD_USER" --password-stdin registry.gitlab.com
    - docker pull registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
    - docker tag registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA registry.gitlab.com/rirvm/rir_mirror:master
    - docker push registry.gitlab.com/rirvm/rir_mirror:master
    - docker pull registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
    - docker tag registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA registry.gitlab.com/rirvm/rir_mirror/benchmark:master
    - docker push registry.gitlab.com/rirvm/rir_mirror/benchmark:master
  only:
    - master

cleanup_registry:
  stage: Cleanup
  image: ruby:2.5
  before_script: []
  script:
    - echo "$CI_BUILD_TOKEN" | ruby container/cleanup.rb
