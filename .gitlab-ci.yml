stages:
  - Build container
  - Sanity Checks
  - Build benchmark container
  - Run tests
  - Deploy
  - Cleanup
  - Benchmark

before_script:
  - export PIR_MAX_INPUT_SIZE=10000
  - export PIR_INLINER_MAX_SIZE=10000
  - export PIR_DEOPT_CHAOS_SEED=$RANDOM
  - echo "PIR_MAX_INPUT_SIZE=$PIR_MAX_INPUT_SIZE PIR_INLINER_MAX_SIZE=$PIR_INLINER_MAX_SIZE PIR_DEOPT_CHAOS_SEED=$PIR_DEOPT_CHAOS_SEED"
  - export REBENCH_OPTIONS="-df $CI_PROJECT_DIR/benchmarks.data --commit-id=$CI_COMMIT_SHA --branch=master"
  - export REBENCH_RUN="/opt/rbenchmarking/Setup/run.sh /opt/rbenchmarking/rebench.conf /opt/rbenchmarking/Benchmarks /opt/rir/build/release"
  - export REBENCH_RUN_BL="/opt/rbenchmarking/Setup/run.sh /opt/rbenchmarking/rebench.conf /opt/rbenchmarking/Benchmarks . /opt/rir/external/custom-r /opt/graal"

sanity:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
  stage: Sanity Checks
  script:
    - /opt/rir/tools/cppcheck --xml
    - /opt/rir/build/release/bin/tests

rir container:
  stage: Build container
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  services:
    - docker:19.03.0-dind
  before_script:
    - docker info
  script:
    - echo "$CI_BUILD_TOKEN" | docker login -u "$CI_BUILD_USER" --password-stdin registry.gitlab.com
    - docker build --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA -t registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA .
    - docker push registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA

benchmark container:
  stage: Build benchmark container
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  services:
    - docker:19.03.0-dind
  before_script:
    - docker info
  script:
    - echo "$CI_BUILD_TOKEN" | docker login -u "$CI_BUILD_USER" --password-stdin registry.gitlab.com
    - cd container/benchmark
    - docker build --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA -t registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA .
    - docker push registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA

# Run check-all in release mode  (additionally check pir types)
test_release_1:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
  stage: Run tests
  except:
    - schedules
  before_script:
    - export PIR_INLINER_INLINE_UNLIKELY=1
  retry: 1
  script:
    - cd /opt/rir/build/release
    - RIR_CHECK_PIR_TYPES=1 bin/tests
    - RIR_CHECK_PIR_TYPES=1 bin/gnur-make-tests check-devel
    - ../../tools/check-gnur-make-tests-error

test_release_2:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
  stage: Run tests
  except:
    - schedules
  before_script:
    - export PIR_INLINER_INLINE_UNLIKELY=1
  retry: 1
  script:
    - cd /opt/rir/build/release
    - bin/gnur-make-tests check-recommended
    - ../../tools/check-gnur-make-tests-error

# Run some tests in the debug mode
tests_debug:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
  stage: Run tests
  except:
    - schedules
  retry: 1
  script:
    - cd /opt/rir/build/debugopt
    - export UNSOUND_OPTS=off
    - R_ENABLE_JIT=0 ./bin/tests
    - R_ENABLE_JIT=1 ./bin/tests
    - R_ENABLE_JIT=2 ./bin/tests
    - R_ENABLE_JIT=3 ./bin/tests
    - PIR_ENABLE=off ./bin/tests
    - PIR_ENABLE=force ./bin/tests
    - ./bin/gnur-make-tests check-devel
    - ../../tools/check-gnur-make-tests-error

# Run some tests in the full verify (release) mode
tests_fullverify:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
  stage: Run tests
  except:
    - schedules
  retry: 1
  script:
    - cd /opt/rir/build/fullverifier
    - bin/tests
    - bin/gnur-make-tests check-devel
    - ../../tools/check-gnur-make-tests-error

# Test particular features, like deoptimization and serialization
test_features:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
  stage: Run tests
  except:
    - schedules
  retry: 1
  script:
    - cd /opt/rir/build/debugopt
    - PIR_NATIVE_BACKEND=1 ./bin/tests
    - cd /opt/rir/build/release
    - PIR_DEOPT_CHAOS=1 PIR_INLINER_MAX_INLINEE_SIZE=800 bin/gnur-make-tests check
    - PIR_WARMUP=2 PIR_DEOPT_CHAOS=1 ./bin/gnur-make-tests check
    - PIR_NATIVE_BACKEND=1 ./bin/gnur-make-tests check
    - RIR_SERIALIZE_CHAOS=1 FAST_TESTS=1 ./bin/tests
#    - RIR_SERIALIZE_CHAOS=10 FAST_TESTS=1 ./bin/tests

# Run ubsan and gc torture
test_sanitize:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
  stage: Run tests
  except:
    - schedules
  retry: 1
  only:
    - master
  script:
    - cd /opt/rir/build/sanitize
    - ENABLE_VALGRIND=1 ./bin/tests
    - R_GCTORTURE=500 bin/tests
    - R_GCTORTURE=5000 ./bin/gnur-make-tests check

# Test with inlining big functions
test_big_inline:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
  stage: Run tests
  except:
    - schedules
  retry: 1
  only:
    - master
  script:
    - cd /opt/rir/build/release
    - PIR_INLINER_MAX_INLINEE_SIZE=2000 ./bin/tests
    - PIR_INLINER_MAX_INLINEE_SIZE=1500 PIR_DEOPT_CHAOS=1 ./bin/tests
    - PIR_INLINER_MAX_INLINEE_SIZE=800 PIR_INLINER_INLINE_UNLIKELY=1 ./bin/gnur-make-tests check

# Test the benchmarks container before deploying
test_benchmarks:
  image: registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
  stage: Run tests
  except:
    - schedules
  script:
    - PATH=~/.local/bin:$PATH /opt/rbenchmarking/Setup/run.sh /opt/rbenchmarking/rebench.conf /opt/rbenchmarking/Benchmarks /opt/rir/build/release/ /opt/rir/external/custom-r "e:RIR e:PIR -r -SN -wu 0 --iterations 2"
    - PIR_DEOPT_CHAOS=1 PATH=~/.local/bin:$PATH /opt/rbenchmarking/Setup/run.sh /opt/rbenchmarking/rebench.conf /opt/rbenchmarking/Benchmarks /opt/rir/build/release/ /opt/rir/external/custom-r "e:PIR -r -SN -wu 0 --iterations 2"
    - PATH=~/.local/bin:$PATH /opt/rbenchmarking/Setup/run.sh /opt/rbenchmarking/rebench.conf /opt/rbenchmarking/Benchmarks /opt/rir/build/release/ /opt/rir/external/custom-r "e:PIR-LLVM -r -SN -wu 0 --iterations 3"

deploy:
  stage: Deploy
  except:
    - schedules
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  services:
    - docker:19.03.0-dind
  before_script:
    - docker info
  variables:
    GIT_STRATEGY: none
  script:
    - echo "$CI_BUILD_TOKEN" | docker login -u "$CI_BUILD_USER" --password-stdin registry.gitlab.com
    - docker pull registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
    - docker tag registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA registry.gitlab.com/rirvm/rir_mirror:master
    - docker push registry.gitlab.com/rirvm/rir_mirror:master
    - docker pull registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
    - docker tag registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA registry.gitlab.com/rirvm/rir_mirror/benchmark:master
    - docker push registry.gitlab.com/rirvm/rir_mirror/benchmark:master
  only:
    - master

cleanup_registry:
  stage: Cleanup
  image: ruby:2.5
  before_script: []
  script:
    - echo "$CI_BUILD_TOKEN" | ruby container/cleanup.rb

benchmark_rir_ginger:
  image: registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
  stage: Benchmark
  variables:
    GIT_STRATEGY: none
  only:
    - schedules
  tags:
    - benchmarks-ginger
  script:
    - $REBENCH_RUN "e:RIR $REBENCH_OPTIONS --environment=Prg-Ginger"
  artifacts:
    paths:
    - benchmarks.data
    expire_in: 6 month
benchmark_pir_ginger:
  image: registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
  stage: Benchmark
  variables:
    GIT_STRATEGY: none
  only:
    - master
  except:
    - schedules
  tags:
    - benchmarks-ginger
  script:
    - $REBENCH_RUN "e:PIR $REBENCH_OPTIONS  --environment=Prg-Ginger"
  artifacts:
    paths:
    - benchmarks.data
    expire_in: 6 month
benchmark_llvm_ginger:
  image: registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
  stage: Benchmark
  variables:
    GIT_STRATEGY: none
  only:
    - master
  except:
    - schedules
  tags:
    - benchmarks-ginger
  script:
    - $REBENCH_RUN "e:PIR-LLVM $REBENCH_OPTIONS  --environment=Prg-Ginger"
  artifacts:
    paths:
    - benchmarks.data
    expire_in: 6 month
benchmark_gnur_ginger:
  image: registry.gitlab.com/rirvm/rir_mirror/benchmark-baseline
  stage: Benchmark
  variables:
    GIT_STRATEGY: none
  only:
    - schedules
  tags:
    - benchmarks-ginger
  script:
    - $REBENCH_RUN_BL "e:GNU-R $REBENCH_OPTIONS  --environment=Prg-Ginger"
  artifacts:
    paths:
    - benchmarks.data
    expire_in: 6 month
benchmark_fastr_ginger:
  image: registry.gitlab.com/rirvm/rir_mirror/benchmark-baseline
  stage: Benchmark
  variables:
    GIT_STRATEGY: none
  only:
    - schedules
  tags:
    - benchmarks-ginger
  script:
    - $REBENCH_RUN_BL "e:FASTR $REBENCH_OPTIONS  --environment=Prg-Ginger"
  allow_failure: true
  artifacts:
    paths:
    - benchmarks.data
    expire_in: 6 month
